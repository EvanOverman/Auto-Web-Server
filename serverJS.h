#include <iostream>
#include <experimental/filesystem>
#include <fstream>
#include <string>

using namespace std;

void clearServerJS(void) {

    fstream serverJS;
    serverJS.open("server.js", ios::out);

    serverJS.close();

}

void startServerJS(void) {

    fstream serverJS;
    serverJS.open("server.js", ios::app);

    serverJS << "// https://github.com/EvanOverman/Auto-Web-Server" << endl;
    serverJS << "// This file was generated by Auto-Web-Server" << endl;
    serverJS << "express = require('express');" << endl;
    serverJS << "path = require('path');" << endl;
    serverJS << "app = express();" << endl;

    serverJS.close();

}

void endServerJS(int port) {

    fstream serverJS;
    serverJS.open("server.js", ios::app);

    serverJS << "app.listen(" << port << ", console.log('server listening on port " << port << " ... '));" << endl;

    serverJS.close();

}

void addGet(string file) {

    fstream serverJS;
    serverJS.open("server.js", ios::app);

    string get = "app.get('" + file + "', (req,res) => {\n\tres.send(path.join(__dirname + '" + file + "'));\n\tconsole.log('server got request for " + file + " ... ');\n});";

    serverJS << get << endl;

}

void makeServerJS(vector <string> filePaths, int port) {

    int amountOfFilePaths = filePaths.size();

    clearServerJS();
    startServerJS();

    for (int currentFilePath = 0; currentFilePath <= amountOfFilePaths; currentFilePath ++) {

        addGet('/' + filePaths[currentFilePath]);

    }

    endServerJS(port);

}